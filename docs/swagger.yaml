basePath: /
definitions:
  entities.AllCities:
    properties:
      data:
        items:
          type: string
        type: array
    type: object
  entities.Info:
    properties:
      clouds:
        additionalProperties:
          type: number
        type: object
      infoWeather:
        items:
          $ref: '#/definitions/entities.InfoWeather'
        type: array
      main:
        $ref: '#/definitions/entities.Main'
      visibility:
        type: number
      wind:
        additionalProperties:
          type: number
        type: object
    type: object
  entities.InfoWeather:
    properties:
      description:
        type: string
      main:
        type: string
    type: object
  entities.Item:
    properties:
      av_temp:
        type: number
      name:
        type: string
    type: object
  entities.Main:
    properties:
      feels_like:
        type: number
      grind_level:
        type: number
      humidity:
        type: number
      pressure:
        type: number
      sea_level:
        type: number
      temp:
        type: number
      temp_kf:
        type: number
      temp_map:
        type: number
      temp_min:
        type: number
    type: object
  entities.SignInInput:
    properties:
      login:
        type: string
      password:
        type: string
    required:
    - login
    - password
    type: object
  entities.User:
    properties:
      login:
        type: string
      password:
        type: string
    required:
    - login
    - password
    type: object
  entities.UserList:
    properties:
      title:
        type: string
      user_id:
        type: integer
    type: object
  entities.WeatherDetails:
    properties:
      date:
        type: string
      info:
        $ref: '#/definitions/entities.Info'
      name:
        type: string
    type: object
  entities.WeatherPredict:
    properties:
      av_temp:
        type: number
      country:
        type: string
      dates:
        items:
          type: string
        type: array
      name:
        type: string
    type: object
  v1.errorResponse:
    properties:
      message:
        type: string
    type: object
  v2.errorResponse:
    properties:
      message:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a service that predicts the weather
  title: Weather API
  version: "2.0"
paths:
  /api/v2/lists:
    post:
      consumes:
      - application/json
      description: create list
      operationId: create-list
      parameters:
      - description: list info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/entities.UserList'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v2.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v2.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v2.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create list
      tags:
      - lists
  /api/v2/lists/:
    get:
      consumes:
      - application/json
      description: get all lists
      operationId: get-all-list
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entities.UserList'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v2.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v2.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v2.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get all lists
      tags:
      - lists
  /api/v2/lists/:id/items/:
    get:
      consumes:
      - application/json
      description: get items by list id
      operationId: get-items-by-list-id
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entities.Item'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v2.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v2.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v2.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get items by list id
      tags:
      - items
  /api/v2/lists/:id/items/:city:
    post:
      consumes:
      - application/json
      description: create items by sity name
      operationId: create-items-by-sity-name
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v2.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v2.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v2.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create items by sity name
      tags:
      - items
  /api/v2/lists/{id}:
    get:
      consumes:
      - application/json
      description: get list by id list
      operationId: get-list-by-id
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.UserList'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v2.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v2.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v2.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get list by id
      tags:
      - lists
    put:
      consumes:
      - application/json
      description: update list by id
      operationId: update-list-by-id
      produces:
      - application/json
      responses:
        "200":
          description: Status
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v2.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v2.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v2.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update list by id
      tags:
      - lists
  /api/v2/lists/{title}:
    delete:
      consumes:
      - application/json
      description: delete list by title
      operationId: delete-list-by-title
      produces:
      - application/json
      responses:
        "200":
          description: Status
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v2.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v2.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v2.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete list by title
      tags:
      - lists
  /auth/sign-in:
    post:
      consumes:
      - application/json
      description: login
      operationId: login
      parameters:
      - description: credentials
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/entities.SignInInput'
      produces:
      - application/json
      responses:
        "200":
          description: token
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v2.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v2.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v2.errorResponse'
      summary: SignIn
      tags:
      - auth
  /auth/sign-up:
    post:
      consumes:
      - application/json
      description: createacount
      operationId: create-account
      parameters:
      - description: User
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/entities.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v2.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v2.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v2.errorResponse'
      summary: SignUp
      tags:
      - auth
  /cities:
    get:
      consumes:
      - application/json
      description: get all cities
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.AllCities'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v2.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v2.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v2.errorResponse'
      summary: Get Cities
      tags:
      - weather
  /cities/{name}:
    get:
      consumes:
      - application/json
      description: get string by NANE
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.WeatherPredict'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v2.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v2.errorResponse'
      summary: Get prediction weather in City
      tags:
      - weather
  /detail_weather/{name}/{date}:
    get:
      consumes:
      - application/json
      description: get STRING by NAME and DATE (YYYY-MM-DDTHH:MM:SSZ)
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.WeatherDetails'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v2.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v2.errorResponse'
      summary: Get all information about the weather in the city on the exact day
      tags:
      - weather
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
